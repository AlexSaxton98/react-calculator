{"version":3,"sources":["App.jsx","reportWebVitals.js","index.js"],"names":["math","require","Button","alias","val","handleClick","style","className","onClick","App","useState","total","setTotal","currentTotal","console","log","equation","evaluate","join","shift","push","map","item","index","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wPAEMA,EAAOC,EAAQ,IA8DfC,EAAS,SAAC,GAAqC,IAApCC,EAAmC,EAAnCA,MAAOC,EAA4B,EAA5BA,IAAKC,EAAuB,EAAvBA,YAAaC,EAAU,EAAVA,MACxC,OACE,wBAAQC,UAAS,iBAAYD,GAASE,QAAS,kBAAKH,EAAYD,IAAhE,SAAuED,GAAgBC,KAI5EK,EAlEH,WACV,MAA0BC,mBAAS,CAAC,IAApC,mBAAOC,EAAP,KAAcC,EAAd,KAwBMP,EAAc,SAACD,GACnB,IAAIS,EAAY,YAAOF,GACvB,GAAW,UAARP,EACDU,QAAQC,IAAI,SACZH,EAAS,CAAC,SACL,GAAY,MAARR,EAAa,CACtBU,QAAQC,IAAI,KACZD,QAAQC,IAAIF,GACZ,IAAIG,EAAWH,EACf,IACEG,EAAWhB,EAAKiB,SAASD,EAASE,KAAK,KACvCN,EAASI,GACT,SACAJ,EAAS,wBAGK,IAAbD,EAAM,IACTE,EAAaM,QACbN,EAAaO,KAAKhB,GAClBQ,EAASC,IAIb,OACE,sBAAKN,UAAU,YAAf,UACE,oBAAIA,UAAU,UAAd,SAAyBI,IA/Cf,CACZ,CAAEP,IAAK,QAASE,MAAO,aAAcH,MAAO,MAC5C,CAAEC,IAAK,IAAKE,MAAO,WAAYH,MAAO,QACtC,CAAEC,IAAK,EAAGE,MAAO,OACjB,CAAEF,IAAK,EAAGE,MAAO,OACjB,CAAEF,IAAK,EAAGE,MAAO,OACjB,CAAEF,IAAK,IAAKE,MAAO,WAAYH,MAAO,KACtC,CAAEC,IAAK,EAAGE,MAAO,OACjB,CAAEF,IAAK,EAAGE,MAAO,OACjB,CAAEF,IAAK,EAAGE,MAAO,OACjB,CAAEF,IAAK,IAAKE,MAAO,YACnB,CAAEF,IAAK,EAAGE,MAAO,OACjB,CAAEF,IAAK,EAAGE,MAAO,OACjB,CAAEF,IAAK,EAAGE,MAAO,OACjB,CAAEF,IAAK,IAAKE,MAAO,YACnB,CAAEF,IAAK,EAAGE,MAAO,QACjB,CAAEF,IAAK,IAAKE,MAAO,OACnB,CAAEF,IAAK,IAAKE,MAAO,aA+BRe,KAAI,SAACC,EAAMC,GACd,OACE,cAAC,EAAD,CAAoBnB,IAAKkB,EAAKlB,IAAKD,MAAOmB,EAAKnB,MAAOG,MAAOgB,EAAKhB,MAAOD,YAAaA,GAAzEkB,UC7CZC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0aa67282.chunk.js","sourcesContent":["import './App.css';\nimport { useState } from \"react\"\nconst math = require(\"mathjs\")\n\nconst App = () => {\n  const [total, setTotal] = useState([0])\n  \n  let buttons = [\n    { val: \"clear\", style: \"clear wide\", alias: \"AC\" },\n    { val: \"/\", style: \"operator\", alias: \"รท\" },\n    { val: 7, style: \"num\" },\n    { val: 8, style: \"num\" },\n    { val: 9, style: \"num\" },\n    { val: \"*\", style: \"operator\", alias: \"x\" },\n    { val: 4, style: \"num\" },\n    { val: 5, style: \"num\" },\n    { val: 6, style: \"num\" },\n    { val: \"-\", style: \"operator\" },\n    { val: 1, style: \"num\" },\n    { val: 2, style: \"num\" },\n    { val: 3, style: \"num\" },\n    { val: \"+\", style: \"operator\" },\n    { val: 0, style: \"zero\" },\n    { val: \".\", style: \"num\" },\n    { val: \"=\", style: \"operator\" }\n  ]\n  \n\n\n  const handleClick = (val) => {\n    let currentTotal = [...total]\n    if(val === \"clear\"){\n      console.log(\"clear\")\n      setTotal([0])\n    } else if (val === \"=\") {\n      console.log(\"=\")\n      console.log(currentTotal)\n      let equation = currentTotal;\n      try {\n        equation = math.evaluate(equation.join(\"\"));\n        setTotal(equation)\n      } catch {\n        setTotal(\"Error press AC\")\n      }\n    } else{\n      if(total[0] === 0){\n      currentTotal.shift() }\n      currentTotal.push(val)\n      setTotal(currentTotal)\n    }\n  }\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"display\">{total}</h1> \n      {buttons.map((item, index) => {\n            return (\n              <Button key={index} val={item.val} alias={item.alias} style={item.style} handleClick={handleClick} />    \n            );\n          })}\n    </div>\n  );\n}\n\nconst Button = ({alias, val, handleClick, style}) =>{\n  return(\n    <button className={`button ${style}`} onClick={()=> handleClick(val)}>{alias ? alias : val}</button>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}